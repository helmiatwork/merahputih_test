<%#
# Show

This view is the template for the show page.
It renders the attributes of a resource,
as well as a link to its edit page.

## Local variables:

- `page`:
  An instance of [Administrate::Page::Show][1].
  Contains methods for accessing the resource to be displayed on the page,
  as well as helpers for describing how each attribute of the resource
  should be displayed.

[1]: http://www.rubydoc.info/gems/administrate/Administrate/Page/Show
%>
<% content_for(:title) { t("administrate.actions.show_resource", name: page.page_title) } %>
<header class="main-content__header p-0">
  <h1 class="main-content__page-title mb-4">
    <%= content_for(:title) %>
  </h1>
</header>
<section class="main-content__body p-0">
  <div class="card">
    <div class="card-header text-right">
      <div>
        <%= link_to(t("edit"), [:edit, namespace, page.resource], class: "btn btn-primary") if accessible_action?(page.resource, :edit) %>
        <%= link_to(t("destroy"),[namespace, page.resource],class: "btn btn-danger",method: :delete, data: { confirm: t("administrate.actions.confirm") }) if accessible_action?(page.resource, :destroy) %>
      </div>
    </div>
    <div class="card-body">
      <table>
        <tbody>
          <% page.attributes.each do |attribute| %>
            <tr>
              <td class="attribute-label" id="<%= attribute.name %>">
                <%= t("helpers.label.#{resource_name}.#{attribute.name}", default: page.resource.class.human_attribute_name(attribute.name)) %>
              </td>
              <td class="attribute-data attribute-data--<%=attribute.html_class%>">
                <%= render_field attribute, page: page %>
              </td>
            </tr>
          <% end %>
        </tr>
      </tbody>
    </table>
  </div>
</section>
